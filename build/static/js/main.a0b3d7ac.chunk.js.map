{"version":3,"sources":["components/sidebar/index.js","pages/configuration/index.js","pages/home/index.js","routes.js","firebaseConfig.js","components/button/index.js","components/input/index.js","pages/login/index.js","app/app.js","index.js"],"names":["Sidebar","handleLogout","className","to","data-tip","data-for","id","textColor","backgroundColor","place","effect","onClick","Configuration","Home","Routes","exact","path","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Button","method","children","props","type","Input","name","error","Fragment","htmlFor","Loginpage","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","onReceiveGoogle","actionLoginGoogle","a","provider","auth","GoogleAuthProvider","signInWithPopup","result","user","console","log","action","placeholder","required","autoComplete","value","onChange","e","target","App","React","useState","setUser","setEmailError","setPasswordError","clearErrors","authListener","onAuthStateChanged","useEffect","actionLoginDataGoogle","u","uid","displayName","avatar","photoURL","signOut","signInWithEmailAndPassword","catch","code","message","createUserWithEmailAndPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0b3d7ac.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  TiHeartHalfOutline,\n  TiCogOutline,\n  TiHomeOutline,\n  TiPowerOutline,\n} from \"react-icons/ti\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./main.css\";\n\nconst Sidebar = ({ handleLogout }) => {\n  return (\n    <aside>\n      <nav className=\"display-flex align-items-center justify-content-center flex-direction-column\">\n        <div className=\"logo display-flex align-items-center justify-content-center\">\n          <TiHeartHalfOutline />\n        </div>\n        <ul className=\"display-flex align-items-center justify-content-center flex-direction-column\">\n          <Link to=\"/\">\n            <li data-tip data-for=\"home\">\n              <TiHomeOutline />\n              <ReactTooltip\n                id=\"home\"\n                textColor=\"#fff\"\n                backgroundColor=\"#5965e0\"\n                place=\"right\"\n                effect=\"solid\"\n              >\n                <span>Home</span>\n              </ReactTooltip>\n            </li>\n          </Link>\n          <Link to=\"/config\">\n            <li data-tip data-for=\"config\">\n              <TiCogOutline />\n              <ReactTooltip\n                id=\"config\"\n                textColor=\"#fff\"\n                backgroundColor=\"#5965e0\"\n                place=\"right\"\n                effect=\"solid\"\n              >\n                <span>Configuration</span>\n              </ReactTooltip>\n            </li>\n          </Link>\n          <li data-tip data-for=\"logout\" onClick={handleLogout}>\n            <TiPowerOutline />\n            <ReactTooltip\n              id=\"logout\"\n              textColor=\"#fff\"\n              backgroundColor=\"#5965e0\"\n              place=\"right\"\n              effect=\"solid\"\n            >\n              <span>Logout</span>\n            </ReactTooltip>\n          </li>\n        </ul>\n      </nav>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nimport \"./main.css\";\n\nconst Configuration = () => {\n  return (\n    <div className=\"container\">\n      <h1>Configuration</h1>\n    </div>\n  );\n};\n\nexport default Configuration;\n","import React from \"react\";\n\nimport \"./main.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <h1>Home</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Configuration from \"./pages/configuration\";\nimport Home from \"./pages/home\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/config\">\n        <Configuration />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID,\n};\n\nfirebase.initializeApp(config);\n\nconst database = firebase.firestore();\n\nexport { database };\nexport default firebase;\n","import React from \"react\";\n\nimport \"./main.css\";\n\nconst Button = ({ method, children, ...props }) => {\n  return (\n    <button type={method} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport \"./main.css\";\n\nconst Input = ({ children, type, name, error, ...props }) => {\n  return (\n    <React.Fragment>\n      <label htmlFor={name}>{children}</label>\n      <input type={type} name={name} {...props} />\n      <p className=\"error-message\">{error}</p>\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { TiHeartHalfOutline } from \"react-icons/ti\";\nimport Button from \"../../components/button\";\nimport Input from \"../../components/input\";\n\nimport firebase from \"../../firebaseConfig\";\n\nimport \"./main.css\";\n\nconst Loginpage = ({\n  email,\n  setEmail,\n  password,\n  setPassword,\n  handleLogin,\n  handleSignup,\n  hasAccount,\n  setHasAccount,\n  emailError,\n  passwordError,\n  onReceiveGoogle,\n}) => {\n  const actionLoginGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await firebase.auth().signInWithPopup(provider);\n\n    if (result) {\n      onReceiveGoogle(result.user);\n    } else {\n      console.log(\"ERROR\");\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <div className=\"content display-flex align-items-center justify-content-center flex-direction-column\">\n        <div className=\"login display-flex align-items-center justify-content-center flex-direction-column\">\n          <div className=\"logo display-flex align-items-center justify-content-center\">\n            <TiHeartHalfOutline />\n          </div>\n          <h1>Welcome to Health Track</h1>\n          <p>Login in to your account</p>\n\n          <form action=\"\">\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"name@email.com\"\n              required\n              autoComplete=\"of\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              error={emailError}\n            >\n              Email\n            </Input>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your Password\"\n              required\n              autoComplete=\"of\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              error={passwordError}\n            >\n              Password\n            </Input>\n            <div>\n              {hasAccount ? (\n                <>\n                  <Button\n                    method=\"button\"\n                    className=\"btn btn-large btn-default\"\n                    onClick={handleLogin}\n                  >\n                    Sing in\n                  </Button>\n                  <p className=\"text-align-right\">\n                    Don't have an account?\n                    <span\n                      className=\"has-account\"\n                      onClick={() => setHasAccount(!hasAccount)}\n                    >\n                      Sign up\n                    </span>\n                  </p>\n                </>\n              ) : (\n                <>\n                  <Button\n                    method=\"button\"\n                    className=\"btn btn-large btn-default\"\n                    onClick={handleSignup}\n                  >\n                    Sing up\n                  </Button>\n                  <p className=\"text-align-right\">\n                    Have an account?\n                    <span\n                      className=\"has-account\"\n                      onClick={() => setHasAccount(!hasAccount)}\n                    >\n                      Sign in\n                    </span>\n                  </p>\n                </>\n              )}\n            </div>\n\n            <p className=\"text-align-center\">---------- OU ----------</p>\n            <Button\n              method=\"button\"\n              className=\"btn btn-large btn-red\"\n              onClick={actionLoginGoogle}\n            >\n              Google\n            </Button>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Loginpage;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Sidebar from \"../components/sidebar\";\nimport Routes from \"../routes\";\n\nimport firebase from \"../firebaseConfig\";\nimport Loginpage from \"../pages/login\";\n\nconst App = () => {\n  const [user, setUser] = React.useState(null);\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [emailError, setEmailError] = React.useState(\"\");\n  const [passwordError, setPasswordError] = React.useState(\"\");\n  const [hasAccount, setHasAccount] = React.useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(error.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(error.message);\n            break;\n          default:\n            console.log(error.message);\n        }\n      });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(error.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(error.message);\n            break;\n          default:\n            console.log(error.message);\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    authListener();\n  }, []);\n\n  const actionLoginDataGoogle = async (u) => {\n    setUser({\n      id: u.uid,\n      name: u.displayName,\n      email: u.email,\n      avatar: u.photoURL,\n    });\n  };\n\n  return (\n    <>\n      {user ? (\n        <BrowserRouter>\n          <Sidebar handleLogout={handleLogout} />\n          <Routes />\n        </BrowserRouter>\n      ) : (\n        <Loginpage\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignup={handleSignup}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n          onReceiveGoogle={actionLoginDataGoogle}\n          setUser={setUser}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app/app\";\n\nimport \"./main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}